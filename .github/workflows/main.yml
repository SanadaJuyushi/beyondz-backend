name: build-scan-test-publish
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
     
      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: 'src/Api/appsettings.json'
        env:
          AccessToken: ${{ secrets.STACKOVERFLOW_TOKEN }}
          AccessKey: ${{ secrets.STACKOVERFLOW_KEY }}
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.* 
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    
      - name: Install dependencies
        run: dotnet restore
      
      - name: Test and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"SanadaJuyushi_beyondz-backend" /o:"sanadajuyushi" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover -l trx
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build
        run: dotnet build --configuration Release --no-restore
      
      - name: Publish
        run: dotnet publish -c Release -o beyondz
      
      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v2
        with:
          app-name: beyondz
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: './beyondz'
